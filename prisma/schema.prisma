// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id     Int           @id @default(autoincrement())
  uuid        String        @unique(map: "uuid") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username    String        @unique @db.VarChar(255)
  phone       String?
  address     String?
  password    String        @db.VarChar(255) 
  role        role          @default(user)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  UserProduct userproduct[]
}

model product {
  product_id      Int               @id @default(autoincrement())
  name            String?
  price           Int?
  quantity        Int?
  desc            String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory productcategory[]
  Media           media[]
  UserProduct     userproduct[]
}

model category {
  category_id     Int               @id @default(autoincrement())
  name            String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory productcategory[]
}

model media {
  id        Int      @id @default(autoincrement())
  name      String?
  url       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   product? @relation(fields: [productId], references: [product_id])
  productId Int?
}

model productcategory {
  id         Int      @id @default(autoincrement())
  product    product  @relation(fields: [productId], references: [product_id])
  productId  Int
  category   category @relation(fields: [categoryId], references: [category_id])
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model userproduct {
  id        Int      @id @default(autoincrement())
  user      users    @relation(fields: [userId], references: [user_id])
  userId    Int
  product   product  @relation(fields: [productId], references: [product_id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum role {
  admin
  user
}
